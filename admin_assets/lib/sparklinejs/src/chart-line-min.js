$.fn.sparkline.line=line=createClass($.fn.sparkline._base,{type:"line",init:function(t,i,h,e,a){line._super.init.call(this,t,i,h,e,a),this.vertices=[],this.regionMap=[],this.xvalues=[],this.yvalues=[],this.yminmax=[],this.hightlightSpotId=null,this.lastShapeId=null,this.initTarget()},getRegion:function(t,i,h){var e,a=this.regionMap;for(e=a.length;e--;)if(null!==a[e]&&i>=a[e][0]&&i<=a[e][1])return a[e][2]},getCurrentRegionFields:function(){var t=this.currentRegion;return{isNull:null===this.yvalues[t],x:this.xvalues[t],y:this.yvalues[t],color:this.options.get("lineColor"),fillColor:this.options.get("fillColor"),offset:t}},renderHighlight:function(){var t=this.currentRegion,i=this.target,h=this.vertices[t],e=this.options,a=e.get("spotRadius"),n=e.get("highlightSpotColor"),s=e.get("highlightLineColor"),o,l;h&&(a&&n&&(o=i.drawCircle(h[0],h[1],a,void 0,n),this.highlightSpotId=o.id,i.insertAfterShape(this.lastShapeId,o)),s&&(l=i.drawLine(h[0],this.canvasTop,h[0],this.canvasTop+this.canvasHeight,s),this.highlightLineId=l.id,i.insertAfterShape(this.lastShapeId,l)))},removeHighlight:function(){var t=this.target;this.highlightSpotId&&(t.removeShapeId(this.highlightSpotId),this.highlightSpotId=null),this.highlightLineId&&(t.removeShapeId(this.highlightLineId),this.highlightLineId=null)},scanValues:function(){var t=this.values,i=t.length,h=this.xvalues,e=this.yvalues,a=this.yminmax,n,s,o,l,r;for(n=0;n<i;n++)s=t[n],o="string"==typeof t[n],l="object"==typeof t[n]&&t[n]instanceof Array,r=o&&t[n].split(":"),o&&2===r.length?(h.push(Number(r[0])),e.push(Number(r[1])),a.push(Number(r[1]))):l?(h.push(s[0]),e.push(s[1]),a.push(s[1])):(h.push(n),null===t[n]||"null"===t[n]?e.push(null):(e.push(Number(s)),a.push(Number(s))));this.options.get("xvalues")&&(h=this.options.get("xvalues")),this.maxy=this.maxyorg=Math.max.apply(Math,a),this.miny=this.minyorg=Math.min.apply(Math,a),this.maxx=Math.max.apply(Math,h),this.minx=Math.min.apply(Math,h),this.xvalues=h,this.yvalues=e,this.yminmax=a},processRangeOptions:function(){var t=this.options,i=t.get("normalRangeMin"),h=t.get("normalRangeMax");void 0!==i&&(i<this.miny&&(this.miny=i),h>this.maxy&&(this.maxy=h)),void 0!==t.get("chartRangeMin")&&(t.get("chartRangeClip")||t.get("chartRangeMin")<this.miny)&&(this.miny=t.get("chartRangeMin")),void 0!==t.get("chartRangeMax")&&(t.get("chartRangeClip")||t.get("chartRangeMax")>this.maxy)&&(this.maxy=t.get("chartRangeMax")),void 0!==t.get("chartRangeMinX")&&(t.get("chartRangeClipX")||t.get("chartRangeMinX")<this.minx)&&(this.minx=t.get("chartRangeMinX")),void 0!==t.get("chartRangeMaxX")&&(t.get("chartRangeClipX")||t.get("chartRangeMaxX")>this.maxx)&&(this.maxx=t.get("chartRangeMaxX"))},drawNormalRange:function(t,i,h,e,a){var n=this.options.get("normalRangeMin"),s=this.options.get("normalRangeMax"),o=i+Math.round(h-h*((s-this.miny)/a)),l=Math.round(h*(s-n)/a);this.target.drawRect(t,o,e,l,void 0,this.options.get("normalRangeColor")).append()},render:function(){var t=this.options,i=this.target,h=this.canvasWidth,e=this.canvasHeight,a=this.vertices,n=t.get("spotRadius"),s=this.regionMap,o,l,r,g,p,m,u,d,x,y,c,v,M,C,R,f,S,I,w,N,b,X,L,T,A;if(line._super.render.call(this)&&(this.scanValues(),this.processRangeOptions(),L=this.xvalues,T=this.yvalues,this.yminmax.length&&!(this.yvalues.length<2))){for(g=p=0,o=this.maxx-this.minx==0?1:this.maxx-this.minx,l=this.maxy-this.miny==0?1:this.maxy-this.miny,r=this.yvalues.length-1,n&&(h<4*n||e<4*n)&&(n=0),n&&(((b=t.get("highlightSpotColor")&&!t.get("disableInteraction"))||t.get("minSpotColor")||t.get("spotColor")&&T[r]===this.miny)&&(e-=Math.ceil(n)),(b||t.get("maxSpotColor")||t.get("spotColor")&&T[r]===this.maxy)&&(e-=Math.ceil(n),g+=Math.ceil(n)),(b||(t.get("minSpotColor")||t.get("maxSpotColor"))&&(T[0]===this.miny||T[0]===this.maxy))&&(p+=Math.ceil(n),h-=Math.ceil(n)),(b||t.get("spotColor")||t.get("minSpotColor")||t.get("maxSpotColor")&&(T[r]===this.miny||T[r]===this.maxy))&&(h-=Math.ceil(n))),e--,void 0===t.get("normalRangeMin")||t.get("drawNormalOnTop")||this.drawNormalRange(p,g,e,h,l),d=[u=[]],C=R=null,f=T.length,A=0;A<f;A++)x=L[A],c=L[A+1],y=T[A],R=(v=p+Math.round((x-this.minx)*(h/o)))+((M=A<f-1?p+Math.round((c-this.minx)*(h/o)):h)-v)/2,s[A]=[C||0,R,A],C=R,null===y?A&&(null!==T[A-1]&&(u=[],d.push(u)),a.push(null)):(y<this.miny&&(y=this.miny),y>this.maxy&&(y=this.maxy),u.length||u.push([v,g+e]),m=[v,g+Math.round(e-e*((y-this.miny)/l))],u.push(m),a.push(m));for(S=[],I=[],w=d.length,A=0;A<w;A++)(u=d[A]).length&&(t.get("fillColor")&&(u.push([u[u.length-1][0],g+e]),I.push(u.slice(0)),u.pop()),2<u.length&&(u[0]=[u[0][0],u[1][1]]),S.push(u));for(w=I.length,A=0;A<w;A++)i.drawShape(I[A],t.get("fillColor"),t.get("fillColor")).append();for(void 0!==t.get("normalRangeMin")&&t.get("drawNormalOnTop")&&this.drawNormalRange(p,g,e,h,l),w=S.length,A=0;A<w;A++)i.drawShape(S[A],t.get("lineColor"),void 0,t.get("lineWidth")).append();if(n&&t.get("valueSpots"))for(void 0===(N=t.get("valueSpots")).get&&(N=new RangeMap(N)),A=0;A<f;A++)(X=N.get(T[A]))&&i.drawCircle(p+Math.round((L[A]-this.minx)*(h/o)),g+Math.round(e-e*((T[A]-this.miny)/l)),n,void 0,X).append();n&&t.get("spotColor")&&null!==T[r]&&i.drawCircle(p+Math.round((L[L.length-1]-this.minx)*(h/o)),g+Math.round(e-e*((T[r]-this.miny)/l)),n,void 0,t.get("spotColor")).append(),this.maxy!==this.minyorg&&(n&&t.get("minSpotColor")&&(x=L[$.inArray(this.minyorg,T)],i.drawCircle(p+Math.round((x-this.minx)*(h/o)),g+Math.round(e-e*((this.minyorg-this.miny)/l)),n,void 0,t.get("minSpotColor")).append()),n&&t.get("maxSpotColor")&&(x=L[$.inArray(this.maxyorg,T)],i.drawCircle(p+Math.round((x-this.minx)*(h/o)),g+Math.round(e-e*((this.maxyorg-this.miny)/l)),n,void 0,t.get("maxSpotColor")).append())),this.lastShapeId=i.getLastShapeId(),this.canvasTop=g,i.render()}}});